# Environment variables
NODE_ENV=development
PORT=3000

# --- Auth & Security ---
# Strong random string; do not commit real secrets. Example only.
JWT_SECRET=dev-change-me-super-secret
# Access token lifetime
JWT_EXPIRES_IN=15m
JWT_ISSUER=swifteats
JWT_AUDIENCE=swifteats-api

# Base64-encoded 32-byte key for AES-256-GCM
# Generate with: node -e "console.log(require('crypto').randomBytes(32).toString('base64'))"
ENCRYPTION_KEY=AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=

# --- OAuth2 (Google) ---
# Obtain from Google Cloud Console (OAuth 2.0 Client IDs)
OAUTH_GOOGLE_CLIENT_ID=
OAUTH_GOOGLE_CLIENT_SECRET=

# --- Catalog Cache & CDN ---
# memory (default) or redis
CACHE_PROVIDER=memory
# Required if CACHE_PROVIDER=redis, e.g. redis://localhost:6379
REDIS_URL=
# Optional prefix for namespacing keys
REDIS_KEY_PREFIX=se
# Optional CDN base URL for rewriting menu item image URLs, e.g. https://cdn.example.com
CDN_BASE_URL=

# --- Driver Tracking ---
# WebSocket configuration
WS_PORT=3001

# PostgreSQL with PostGIS for geospatial data
PG_HOST=localhost
PG_PORT=5432
PG_USER=postgres
PG_PASSWORD=postgres
PG_DATABASE=swifteats

# Message Queue for location updates
LOCATION_QUEUE_CONCURRENCY=5
LOCATION_BATCH_SIZE=100
LOCATION_BATCH_INTERVAL_MS=1000

# Driver tracking settings
DRIVER_LOCATION_TTL_SECONDS=300
MAX_CONCURRENT_CONNECTIONS=10000
CLIENT_POLLING_INTERVAL_MS=1000

# --- Observability & Monitoring ---
# Service name for metrics, logs, and traces
SERVICE_NAME=swifteats-backend

# Metrics
METRICS_PREFIX=swifteats_
METRICS_PORT=9090

# Logging
LOG_LEVEL=info
ELASTICSEARCH_ENABLED=false
ELASTICSEARCH_NODE=http://localhost:9200
ELASTICSEARCH_INDEX_PREFIX=swifteats-logs
ELASTICSEARCH_BULK_SIZE=100
ELASTICSEARCH_FLUSH_INTERVAL=5000

# Tracing
TRACING_ENABLED=false
JAEGER_ENDPOINT=http://localhost:14268/api/traces

# Alerting
ALERTING_ENABLED=false
ALERT_MANAGER_URL=http://localhost:9093/api/v2/alerts

# Lag Monitoring
LAG_MONITORING_ENABLED=true
LAG_CHECK_INTERVAL=15000
